package com.modbus.file;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class SignalTypeConfigXML {

    //传参 IP 端口xml文件名，第二级节点
    //读取xml文件信息
    public static NodeList getPathConfigFile(String xmlName,String tagName){
        NodeList _contentList=null;
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        String projectPath=System.getProperty("user.dir");
//        projectPath=projectPath.substring(0,projectPath.lastIndexOf("\\"));
        try {
            DocumentBuilder db = dbf.newDocumentBuilder();
            String path=projectPath+File.separator+"xml"+File.separator+xmlName;
            Document document = db.parse("file:///" +path);
            // xml中元素的变量命名均以_符号起始.下同
            Element _message = document.getDocumentElement();
            // 取级元素content
            _contentList = _message.getElementsByTagName(tagName);
        } catch (ParserConfigurationException e) {
            e.printStackTrace();
        } catch (SAXException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return _contentList;
    }


    //获取位状态功能码
    public static List<String> getCoilsCode(){
        String[] coils=null;
        NodeList _contentList=SignalTypeConfigXML.getPathConfigFile("SignalTypeConfig.xml","ReadCoils");
        if(_contentList!=null){
            Node _db=_contentList.item(0);
            if (_db instanceof Element) {
                Element ele = (Element) _db;
                String coil=ele.getAttribute("list");
                coils=coil.split(",");
            }
        }
        return Arrays.asList(coils);
    }

    //获取寄存器功能码
    public static List<String> getMulitplesCode(){
        String[] registers=null;
        NodeList _contentList=SignalTypeConfigXML.getPathConfigFile("SignalTypeConfig.xml","ReadMulitple");
        if(_contentList!=null){
            Node _db=_contentList.item(0);
            if (_db instanceof Element) {
                Element ele = (Element) _db;
                String register=ele.getAttribute("list");
                registers=register.split(",");
            }
        }
        return Arrays.asList(registers);
    }

}
